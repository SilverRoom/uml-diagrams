@startuml
start
:Регистрация/авторизация клиента;
:Подтверждение учётных данных;
:Выбор товаров и добавление в корзину;

:Оформление заказа, выбор способа доставки и оплаты;

repeat :Проверка наличия товаров из корзины;
    if (Все товары присутствуют?) then (нет)
        :Уведомление клиента о недоступности товара;

    if (Оставить товар в ожидании?) then (да)
:Автоматиеское уведомление о поступлении товара;
stop
else (нет)
endif 



        if (Выбрать альтернативный товар или удалить отсутствующий?) then (Удалить)
            :Удаление отсутствующего товара;
            
            else (Выбрать альтернативный)
            :Выбор альтернативного товара из аналогичной категории;


             
        endif
       break
        else (да)
            fork
           :Выбор способа оплаты;
            fork
            :Проверка платежных данных;




                if (Платежная система доступна? ) then (да)

                if (Платежные данные верны? ) then (да)


                if (Средств достаточно? ) then (да)

                :Оплата;
                else (нет)
                :Ошибка 
                "Средств недостаточно";
                stop
            endif
            

            else (нет)
                :Ошибка 
                "Платежные данные не верны";
                stop
            endif

            else (нет)
                :Ошибка 
                "Платежная система недоступна";
                stop
                endif





            fork again
            :Cовершение транзакции;
            if (Промокод введен) then (да)
             :Проверка условий скидки;
                if (Условия соблюдены и промокод валиден? ) then (да)
                 :Обновление суммы заказа с учётом скидки;
                 
                else (нет)

                if (Промокод верный? ) then (да)
                if (Промокод действует на товары? ) then (да)


                if (Лимит превышен? ) then (да)
                
                :Скидка не применяется ошибка 
                "Лимит превышен";
                else (нет)
                :Обновление суммы заказа с учётом скидки;
                endif






                
                else (нет)
                :Скидка не применяется ошибка 
                "Промокод не действует на товары";
                endif

                else (нет)
                :Скидка не применяется ошибка 
                "Промокод не верный";
                endif





                endif
                else (нет)
                endif 


            end fork



            fork again
            :Подготовка товара к отправке;
            fork
            :Уведомление склада о сборке заказа;
            fork again
            :Комплектация заказа;
            end fork
              
            end fork
         
            :Получение статуса оплаты и готовности к отправке;

    endif

:Синхронизация результатов платежа и наличия товара;
if (Платеж успешен и товар в наличии?) then (да)
fork
:Генерация счета фактуры;
fork again
:Отправка уведомления клиенту;
fork again
:Смена статуса заказа на "Отправлен";
end fork

:Обновление статуса доставки, по мере изменения статуса доставки;
:Отправка уведомления клиенту об изменении статуса доставки (подтверждение, отправка, доставка) ;
else (нет)
if (Прошла оплата?) then (да)
:Уведомление клиента о проблемах количеством товара;
else (нет)

:Предложение о повторной попытке оплаты или изменении способа платежа;
endif
endif
stop
@enduml